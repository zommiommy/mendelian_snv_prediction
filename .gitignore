
# genome caches
genomes

dist/
.python-version
parts/
.Python
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
*.mo
*.pot
/site
var/
*.egg-info/
# IPython
\.DS_Store
env/
__pycache__/
#Pipfile.lock
db.sqlite3-journal
downloads/
.webassets-cache
.ropeproject
pip-log.txt
# PyInstaller
.hypothesis/
htmlcov/
*/__pycache__/*
__pypackages__/
*.spec
**/__pycache__/*
.installed.cfg
local_settings.py
.ipynb_checkpoints
.spyderproject
# PyBuilder
# Celery stuff
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
#   install all needed dependencies.
ipython_config.py
.cache
nosetests.xml
MANIFEST
lib64/
.pyre/
# Jupyter Notebook
pip-delete-this-directory.txt
instance/
.nox/
target/
# Spyder project settings
.mypy_cache/
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
share/python-wheels/
.tox/
develop-eggs/
eggs/
*.py[cod]
db.sqlite3
# Distribution / packaging
# Translations
.pytest_cache/
# mkdocs documentation
lib/
docs/_build/
.coverage
.scrapy
.single_run
# pipenv
celerybeat.pid
# mypy
*.manifest
# Byte-compiled / optimized / DLL files
build/
*.sage.py
ENV/
venv/
# Rope project settings
.env
coverage.xml
.venv
# Installer logs
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
*.py,cover
.dmypy.json
*.cover
# Django stuff:
.coverage.*
*$py.class
\.vscode/
*.egg
.eggs/
__pycache__
#  Usually these files are written by a python script from a template
# pyenv
venv.bak/
profile_default/
pip-wheel-metadata/
.notipy.json
# Environments
# Scrapy stuff:
dmypy.json
*.log
# Flask stuff:
# Unit test / coverage reports
env.bak/
# PEP 582; used by e.g. github.com/David-OConnor/pyflow
# C extensions
sdist/
*.so
.spyproject
wheels/
# Sphinx documentation
# Pyre type checker
celerybeat-schedule
# SageMath parsed files
.coverage*